{"ast":null,"code":"/**\n * API ÈÖçÁΩÆÊ™îÊ°à\n * Ê†πÊìöÁí∞Â¢ÉËá™ÂãïÈÅ∏Êìá API Âü∫Á§é URL\n */\n\n// ÂèñÂæóÁí∞Â¢ÉËÆäÊï∏Êàñ‰ΩøÁî®È†êË®≠ÂÄº\nconst getApiBaseUrl = () => {\n  // ÂæûÁí∞Â¢ÉËÆäÊï∏ÂèñÂæó API URL\n  const envApiUrl = process.env.REACT_APP_API_BASE_URL;\n  if (envApiUrl) {\n    return envApiUrl;\n  }\n\n  // Ê†πÊìöÁï∂ÂâçÁí∞Â¢ÉËá™ÂãïÂà§Êñ∑\n  if (process.env.NODE_ENV === 'production') {\n    // ÁîüÁî¢Áí∞Â¢ÉÔºöÈÉ®ÁΩ≤Âú® PythonAnywhere\n    return 'https://thc1006.pythonanywhere.com';\n  } else {\n    // ÈñãÁôºÁí∞Â¢ÉÔºöÊú¨Âú∞ÂæåÁ´Ø\n    return 'http://localhost:8000';\n  }\n};\nexport const API_CONFIG = {\n  BASE_URL: getApiBaseUrl(),\n  ENDPOINTS: {\n    // ÁóáÁãÄÂàÜÊûê\n    TRIAGE: '/v1/triage',\n    TRIAGE_QUICK: '/v1/triage/quick',\n    // ÈÜ´Èô¢ÊêúÂ∞ã\n    HOSPITALS_NEARBY: '/v1/hospitals/nearby',\n    HOSPITALS_EMERGENCY: '/v1/hospitals/emergency-info',\n    // ÂÅ•Â∫∑Ë≥áË®ä\n    HEALTH_TOPICS: '/v1/healthinfo/topics',\n    HEALTH_RESOURCES: '/v1/healthinfo/resources',\n    // Áõ£Êéß\n    HEALTH_CHECK: '/v1/monitoring/health',\n    METRICS: '/v1/monitoring/metrics'\n  },\n  // Ë´ãÊ±ÇË∂ÖÊôÇË®≠ÂÆöÔºàÊØ´ÁßíÔºâ\n  TIMEOUT: 10000,\n  // ÈáçË©¶Ê¨°Êï∏\n  RETRY_COUNT: 3\n};\n\n// ÂÆåÊï¥ÁöÑ API URL Âª∫ÊßãÂáΩÊï∏\nexport const buildApiUrl = endpoint => {\n  return `${API_CONFIG.BASE_URL}${endpoint}`;\n};\n\n// API ÁãÄÊÖãÊ™¢Êü•\nexport const checkApiHealth = async () => {\n  try {\n    const response = await fetch(buildApiUrl(API_CONFIG.ENDPOINTS.HEALTH_CHECK), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      signal: AbortSignal.timeout(5000) // 5ÁßíË∂ÖÊôÇ\n    });\n    return response.ok;\n  } catch (error) {\n    console.warn('API ÂÅ•Â∫∑Ê™¢Êü•Â§±Êïó:', error);\n    return false;\n  }\n};\n\n// Áí∞Â¢ÉË≥áË®äÔºàÁî®ÊñºÈô§ÈåØÔºâ\nexport const ENV_INFO = {\n  NODE_ENV: process.env.NODE_ENV,\n  API_BASE_URL: API_CONFIG.BASE_URL,\n  BUILD_TIME: new Date().toISOString()\n};\nconsole.log('üîß API ÈÖçÁΩÆ:', ENV_INFO);","map":{"version":3,"names":["getApiBaseUrl","envApiUrl","process","env","REACT_APP_API_BASE_URL","NODE_ENV","API_CONFIG","BASE_URL","ENDPOINTS","TRIAGE","TRIAGE_QUICK","HOSPITALS_NEARBY","HOSPITALS_EMERGENCY","HEALTH_TOPICS","HEALTH_RESOURCES","HEALTH_CHECK","METRICS","TIMEOUT","RETRY_COUNT","buildApiUrl","endpoint","checkApiHealth","response","fetch","method","headers","signal","AbortSignal","timeout","ok","error","console","warn","ENV_INFO","API_BASE_URL","BUILD_TIME","Date","toISOString","log"],"sources":["C:/Users/thc1006/Desktop/dev/NYCU-Med-AI-Agent/frontend/src/config/api.ts"],"sourcesContent":["/**\n * API ÈÖçÁΩÆÊ™îÊ°à\n * Ê†πÊìöÁí∞Â¢ÉËá™ÂãïÈÅ∏Êìá API Âü∫Á§é URL\n */\n\n// ÂèñÂæóÁí∞Â¢ÉËÆäÊï∏Êàñ‰ΩøÁî®È†êË®≠ÂÄº\nconst getApiBaseUrl = (): string => {\n  // ÂæûÁí∞Â¢ÉËÆäÊï∏ÂèñÂæó API URL\n  const envApiUrl = process.env.REACT_APP_API_BASE_URL;\n\n  if (envApiUrl) {\n    return envApiUrl;\n  }\n\n  // Ê†πÊìöÁï∂ÂâçÁí∞Â¢ÉËá™ÂãïÂà§Êñ∑\n  if (process.env.NODE_ENV === 'production') {\n    // ÁîüÁî¢Áí∞Â¢ÉÔºöÈÉ®ÁΩ≤Âú® PythonAnywhere\n    return 'https://thc1006.pythonanywhere.com';\n  } else {\n    // ÈñãÁôºÁí∞Â¢ÉÔºöÊú¨Âú∞ÂæåÁ´Ø\n    return 'http://localhost:8000';\n  }\n};\n\nexport const API_CONFIG = {\n  BASE_URL: getApiBaseUrl(),\n  ENDPOINTS: {\n    // ÁóáÁãÄÂàÜÊûê\n    TRIAGE: '/v1/triage',\n    TRIAGE_QUICK: '/v1/triage/quick',\n\n    // ÈÜ´Èô¢ÊêúÂ∞ã\n    HOSPITALS_NEARBY: '/v1/hospitals/nearby',\n    HOSPITALS_EMERGENCY: '/v1/hospitals/emergency-info',\n\n    // ÂÅ•Â∫∑Ë≥áË®ä\n    HEALTH_TOPICS: '/v1/healthinfo/topics',\n    HEALTH_RESOURCES: '/v1/healthinfo/resources',\n\n    // Áõ£Êéß\n    HEALTH_CHECK: '/v1/monitoring/health',\n    METRICS: '/v1/monitoring/metrics'\n  },\n\n  // Ë´ãÊ±ÇË∂ÖÊôÇË®≠ÂÆöÔºàÊØ´ÁßíÔºâ\n  TIMEOUT: 10000,\n\n  // ÈáçË©¶Ê¨°Êï∏\n  RETRY_COUNT: 3\n} as const;\n\n// ÂÆåÊï¥ÁöÑ API URL Âª∫ÊßãÂáΩÊï∏\nexport const buildApiUrl = (endpoint: string): string => {\n  return `${API_CONFIG.BASE_URL}${endpoint}`;\n};\n\n// API ÁãÄÊÖãÊ™¢Êü•\nexport const checkApiHealth = async (): Promise<boolean> => {\n  try {\n    const response = await fetch(buildApiUrl(API_CONFIG.ENDPOINTS.HEALTH_CHECK), {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      signal: AbortSignal.timeout(5000) // 5ÁßíË∂ÖÊôÇ\n    });\n\n    return response.ok;\n  } catch (error) {\n    console.warn('API ÂÅ•Â∫∑Ê™¢Êü•Â§±Êïó:', error);\n    return false;\n  }\n};\n\n// Áí∞Â¢ÉË≥áË®äÔºàÁî®ÊñºÈô§ÈåØÔºâ\nexport const ENV_INFO = {\n  NODE_ENV: process.env.NODE_ENV,\n  API_BASE_URL: API_CONFIG.BASE_URL,\n  BUILD_TIME: new Date().toISOString()\n};\n\nconsole.log('üîß API ÈÖçÁΩÆ:', ENV_INFO);"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,aAAa,GAAGA,CAAA,KAAc;EAClC;EACA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAEpD,IAAIH,SAAS,EAAE;IACb,OAAOA,SAAS;EAClB;;EAEA;EACA,IAAIC,OAAO,CAACC,GAAG,CAACE,QAAQ,KAAK,YAAY,EAAE;IACzC;IACA,OAAO,oCAAoC;EAC7C,CAAC,MAAM;IACL;IACA,OAAO,uBAAuB;EAChC;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG;EACxBC,QAAQ,EAAEP,aAAa,CAAC,CAAC;EACzBQ,SAAS,EAAE;IACT;IACAC,MAAM,EAAE,YAAY;IACpBC,YAAY,EAAE,kBAAkB;IAEhC;IACAC,gBAAgB,EAAE,sBAAsB;IACxCC,mBAAmB,EAAE,8BAA8B;IAEnD;IACAC,aAAa,EAAE,uBAAuB;IACtCC,gBAAgB,EAAE,0BAA0B;IAE5C;IACAC,YAAY,EAAE,uBAAuB;IACrCC,OAAO,EAAE;EACX,CAAC;EAED;EACAC,OAAO,EAAE,KAAK;EAEd;EACAC,WAAW,EAAE;AACf,CAAU;;AAEV;AACA,OAAO,MAAMC,WAAW,GAAIC,QAAgB,IAAa;EACvD,OAAO,GAAGd,UAAU,CAACC,QAAQ,GAAGa,QAAQ,EAAE;AAC5C,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAA8B;EAC1D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,WAAW,CAACb,UAAU,CAACE,SAAS,CAACO,YAAY,CAAC,EAAE;MAC3ES,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,MAAM,EAAEC,WAAW,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,OAAON,QAAQ,CAACO,EAAE;EACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,IAAI,CAAC,aAAa,EAAEF,KAAK,CAAC;IAClC,OAAO,KAAK;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAG;EACtB5B,QAAQ,EAAEH,OAAO,CAACC,GAAG,CAACE,QAAQ;EAC9B6B,YAAY,EAAE5B,UAAU,CAACC,QAAQ;EACjC4B,UAAU,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACrC,CAAC;AAEDN,OAAO,CAACO,GAAG,CAAC,YAAY,EAAEL,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}