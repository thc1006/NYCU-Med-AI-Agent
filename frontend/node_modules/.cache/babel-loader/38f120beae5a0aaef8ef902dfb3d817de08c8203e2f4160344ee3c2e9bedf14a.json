{"ast":null,"code":"/**\n * 地理位置 Hook\n */import{useState,useEffect,useCallback}from'react';import{locationApi}from'../services/api';import{useLocation}from'../stores/useAppStore';import toast from'react-hot-toast';export const useGeolocation=function(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const{userLocation,locationPermission,setUserLocation,setLocationPermission}=useLocation();const[error,setError]=useState(null);const[loading,setLoading]=useState(false);// 檢查瀏覽器是否支援地理定位\nconst isSupported='geolocation'in navigator;/**\n   * 取得目前位置\n   */const getCurrentLocation=useCallback(async()=>{if(!isSupported){var _options$onError;const errorMsg='此瀏覽器不支援地理定位功能';setError(errorMsg);(_options$onError=options.onError)===null||_options$onError===void 0?void 0:_options$onError.call(options,errorMsg);toast.error(errorMsg);return;}setLoading(true);setError(null);try{var _options$onSuccess;const position=await locationApi.getCurrentLocation();setUserLocation(position);setLocationPermission(true);setError(null);(_options$onSuccess=options.onSuccess)===null||_options$onSuccess===void 0?void 0:_options$onSuccess.call(options,position);toast.success('已取得您的位置');}catch(err){var _options$onError2;const errorMsg=err instanceof Error?err.message:'無法取得位置資訊';setError(errorMsg);setLocationPermission(false);(_options$onError2=options.onError)===null||_options$onError2===void 0?void 0:_options$onError2.call(options,errorMsg);// 針對不同錯誤類型顯示不同訊息\nif(errorMsg.includes('拒絕')){toast.error('請允許位置存取以搜尋附近醫院',{duration:5000});}else if(errorMsg.includes('超時')){toast.error('定位超時，請檢查GPS設定');}else{toast.error(errorMsg);}}finally{setLoading(false);}},[isSupported,options,setUserLocation,setLocationPermission]);/**\n   * 清除位置資訊\n   */const clearLocation=useCallback(()=>{setUserLocation(null);setError(null);setLocationPermission(false);},[setUserLocation,setLocationPermission]);/**\n   * 監聽位置權限變化\n   */useEffect(()=>{if(!isSupported)return;// 檢查位置權限狀態\nif('permissions'in navigator){navigator.permissions.query({name:'geolocation'}).then(result=>{setLocationPermission(result.state==='granted');// 監聽權限變化\nresult.addEventListener('change',()=>{const hasPermission=result.state==='granted';setLocationPermission(hasPermission);if(result.state==='denied'){setUserLocation(null);setError('位置存取被拒絕');}});}).catch(()=>{// 某些瀏覽器不支援 permissions API\nconsole.warn('Cannot check geolocation permission');});}},[isSupported,setLocationPermission,setUserLocation]);return{location:userLocation,error,loading,getCurrentLocation,clearLocation,isSupported};};","map":{"version":3,"names":["useState","useEffect","useCallback","locationApi","useLocation","toast","useGeolocation","options","arguments","length","undefined","userLocation","locationPermission","setUserLocation","setLocationPermission","error","setError","loading","setLoading","isSupported","navigator","getCurrentLocation","_options$onError","errorMsg","onError","call","_options$onSuccess","position","onSuccess","success","err","_options$onError2","Error","message","includes","duration","clearLocation","permissions","query","name","then","result","state","addEventListener","hasPermission","catch","console","warn","location"],"sources":["C:/Users/thc1006/Desktop/dev/NYCU-Med-AI-Agent/frontend/src/hooks/useGeolocation.ts"],"sourcesContent":["/**\n * 地理位置 Hook\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { locationApi } from '../services/api';\nimport { useLocation } from '../stores/useAppStore';\nimport toast from 'react-hot-toast';\n\ninterface UseGeolocationOptions {\n  enableHighAccuracy?: boolean;\n  timeout?: number;\n  maximumAge?: number;\n  onSuccess?: (position: { latitude: number; longitude: number }) => void;\n  onError?: (error: string) => void;\n}\n\ninterface UseGeolocationReturn {\n  location: { latitude: number; longitude: number } | null;\n  error: string | null;\n  loading: boolean;\n  getCurrentLocation: () => Promise<void>;\n  clearLocation: () => void;\n  isSupported: boolean;\n}\n\nexport const useGeolocation = (options: UseGeolocationOptions = {}): UseGeolocationReturn => {\n  const {\n    userLocation,\n    locationPermission,\n    setUserLocation,\n    setLocationPermission\n  } = useLocation();\n\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  // 檢查瀏覽器是否支援地理定位\n  const isSupported = 'geolocation' in navigator;\n\n  /**\n   * 取得目前位置\n   */\n  const getCurrentLocation = useCallback(async () => {\n    if (!isSupported) {\n      const errorMsg = '此瀏覽器不支援地理定位功能';\n      setError(errorMsg);\n      options.onError?.(errorMsg);\n      toast.error(errorMsg);\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n    try {\n      const position = await locationApi.getCurrentLocation();\n\n      setUserLocation(position);\n      setLocationPermission(true);\n      setError(null);\n\n      options.onSuccess?.(position);\n      toast.success('已取得您的位置');\n\n    } catch (err) {\n      const errorMsg = err instanceof Error ? err.message : '無法取得位置資訊';\n\n      setError(errorMsg);\n      setLocationPermission(false);\n      options.onError?.(errorMsg);\n\n      // 針對不同錯誤類型顯示不同訊息\n      if (errorMsg.includes('拒絕')) {\n        toast.error('請允許位置存取以搜尋附近醫院', {\n          duration: 5000\n        });\n      } else if (errorMsg.includes('超時')) {\n        toast.error('定位超時，請檢查GPS設定');\n      } else {\n        toast.error(errorMsg);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [isSupported, options, setUserLocation, setLocationPermission]);\n\n  /**\n   * 清除位置資訊\n   */\n  const clearLocation = useCallback(() => {\n    setUserLocation(null);\n    setError(null);\n    setLocationPermission(false);\n  }, [setUserLocation, setLocationPermission]);\n\n  /**\n   * 監聽位置權限變化\n   */\n  useEffect(() => {\n    if (!isSupported) return;\n\n    // 檢查位置權限狀態\n    if ('permissions' in navigator) {\n      navigator.permissions.query({ name: 'geolocation' }).then((result) => {\n        setLocationPermission(result.state === 'granted');\n\n        // 監聽權限變化\n        result.addEventListener('change', () => {\n          const hasPermission = result.state === 'granted';\n          setLocationPermission(hasPermission);\n\n          if (result.state === 'denied') {\n            setUserLocation(null);\n            setError('位置存取被拒絕');\n          }\n        });\n      }).catch(() => {\n        // 某些瀏覽器不支援 permissions API\n        console.warn('Cannot check geolocation permission');\n      });\n    }\n  }, [isSupported, setLocationPermission, setUserLocation]);\n\n  return {\n    location: userLocation,\n    error,\n    loading,\n    getCurrentLocation,\n    clearLocation,\n    isSupported\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}