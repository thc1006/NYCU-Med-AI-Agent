{"ast":null,"code":"/**\n * API 服務層 - 與後端 FastAPI 通訊\n */import axios from'axios';import{API_ENDPOINTS}from'../types';// 建立 axios 實例\nconst api=axios.create({baseURL:process.env.NODE_ENV==='production'?'/api':'http://localhost:8000',timeout:15000,headers:{'Content-Type':'application/json','Accept':'application/json','Accept-Language':'zh-TW'}});// 請求攔截器 - 加入請求 ID 和時間戳\napi.interceptors.request.use(config=>{var _config$method;const requestId=\"req_\".concat(Date.now(),\"_\").concat(Math.random().toString(36).substr(2,9));config.headers['X-Request-ID']=requestId;config.headers['X-Client-Timestamp']=new Date().toISOString();console.log(\"[API Request] \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" \").concat(config.url),{requestId,data:config.data});return config;},error=>{console.error('[API Request Error]',error);return Promise.reject(error);});// 回應攔截器 - 統一錯誤處理\napi.interceptors.response.use(response=>{console.log(\"[API Response] \".concat(response.status),{requestId:response.headers['x-request-id'],data:response.data});return response;},error=>{var _error$response,_error$response2,_error$response2$data,_error$config;console.error('[API Response Error]',{status:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,message:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||error.message,url:(_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.url});// 轉換錯誤訊息為繁體中文\nconst errorMessage=getErrorMessage(error);error.message=errorMessage;return Promise.reject(error);});/**\n * 將錯誤訊息轉換為使用者友善的繁體中文訊息\n */function getErrorMessage(error){var _error$response3,_error$response3$data,_error$response4;if((_error$response3=error.response)!==null&&_error$response3!==void 0&&(_error$response3$data=_error$response3.data)!==null&&_error$response3$data!==void 0&&_error$response3$data.message){return error.response.data.message;}switch((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status){case 400:return'請求參數有誤，請檢查輸入資料';case 401:return'未授權存取，請重新登入';case 403:return'沒有權限執行此操作';case 404:return'找不到相關資源';case 429:return'請求過於頻繁，請稍後再試';case 500:return'伺服器發生錯誤，請稍後再試';case 502:case 503:case 504:return'服務暫時無法使用，請稍後再試';default:if(error.code==='NETWORK_ERROR'||error.message.includes('Network Error')){return'網路連線異常，請檢查網路設定';}if(error.code==='ECONNABORTED'){return'請求超時，請重試';}return'系統發生未知錯誤，請聯絡技術支援';}}/**\n * 症狀分級評估 API\n */export const triageApi={/**\n   * 快速症狀評估\n   */async quickTriage(request){try{const response=await api.post(API_ENDPOINTS.TRIAGE_QUICK,request);return response.data;}catch(error){console.error('[Triage API Error]',error);throw error;}}};/**\n * 醫院搜尋 API\n */export const hospitalApi={/**\n   * 搜尋附近醫院\n   */async searchNearby(params){try{var _params$departments;const response=await api.get(API_ENDPOINTS.HOSPITALS_NEARBY,{params:{lat:params.latitude,lng:params.longitude,radius:params.radius||5000,limit:params.limit||20,departments:(_params$departments=params.departments)===null||_params$departments===void 0?void 0:_params$departments.join(','),emergency_only:params.emergency_only||false}});return response.data;}catch(error){console.error('[Hospital Search API Error]',error);throw error;}},/**\n   * 取得緊急醫療資訊\n   */async getEmergencyInfo(){try{const response=await api.get(API_ENDPOINTS.EMERGENCY_INFO);return response.data;}catch(error){console.error('[Emergency Info API Error]',error);throw error;}}};/**\n * 地理位置服務\n */export const locationApi={/**\n   * 取得使用者目前位置\n   */async getCurrentLocation(){return new Promise((resolve,reject)=>{if(!navigator.geolocation){reject(new Error('此瀏覽器不支援地理定位功能'));return;}const options={enableHighAccuracy:true,timeout:10000,maximumAge:60000// 1分鐘內的快取位置可接受\n};navigator.geolocation.getCurrentPosition(position=>{resolve({latitude:position.coords.latitude,longitude:position.coords.longitude});},error=>{let message='無法取得位置資訊';switch(error.code){case error.PERMISSION_DENIED:message='使用者拒絕了地理定位請求';break;case error.POSITION_UNAVAILABLE:message='位置資訊不可用';break;case error.TIMEOUT:message='定位請求超時';break;}reject(new Error(message));},options);});},/**\n   * 計算兩點間距離（公里）\n   */calculateDistance(lat1,lon1,lat2,lon2){const R=6371;// 地球半徑（公里）\nconst dLat=this.degToRad(lat2-lat1);const dLon=this.degToRad(lon2-lon1);const a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(this.degToRad(lat1))*Math.cos(this.degToRad(lat2))*Math.sin(dLon/2)*Math.sin(dLon/2);const c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return R*c;},degToRad(deg){return deg*(Math.PI/180);}};/**\n * 緊急撥號服務\n */export const emergencyApi={/**\n   * 撥打緊急電話\n   * 注意：在網頁環境中，只能開啟撥號程式，無法直接撥號\n   */call(number){try{// 檢查是否為行動裝置\nconst isMobile=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);if(isMobile){// 行動裝置直接撥號\nwindow.location.href=\"tel:\".concat(number);}else{// 桌面裝置顯示電話號碼\nalert(\"\\u8ACB\\u64A5\\u6253\\uFF1A\".concat(number,\"\\n\\n\\u5982\\u679C\\u60A8\\u5728\\u7DCA\\u6025\\u72C0\\u6CC1\\u4E2D\\uFF0C\\u8ACB\\u4F7F\\u7528\\u624B\\u6A5F\\u64A5\\u6253\\u6B64\\u865F\\u78BC\\u3002\"));}}catch(error){console.error('[Emergency Call Error]',error);alert(\"\\u7DCA\\u6025\\u96FB\\u8A71\\uFF1A\".concat(number,\"\\n\\u8ACB\\u7ACB\\u5373\\u4F7F\\u7528\\u96FB\\u8A71\\u64A5\\u6253\\u6B64\\u865F\\u78BC\\u3002\"));}}};export default api;","map":{"version":3,"names":["axios","API_ENDPOINTS","api","create","baseURL","process","env","NODE_ENV","timeout","headers","interceptors","request","use","config","_config$method","requestId","concat","Date","now","Math","random","toString","substr","toISOString","console","log","method","toUpperCase","url","data","error","Promise","reject","response","status","_error$response","_error$response2","_error$response2$data","_error$config","message","errorMessage","getErrorMessage","_error$response3","_error$response3$data","_error$response4","code","includes","triageApi","quickTriage","post","TRIAGE_QUICK","hospitalApi","searchNearby","params","_params$departments","get","HOSPITALS_NEARBY","lat","latitude","lng","longitude","radius","limit","departments","join","emergency_only","getEmergencyInfo","EMERGENCY_INFO","locationApi","getCurrentLocation","resolve","navigator","geolocation","Error","options","enableHighAccuracy","maximumAge","getCurrentPosition","position","coords","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","degToRad","dLon","a","sin","cos","c","atan2","sqrt","deg","PI","emergencyApi","call","number","isMobile","test","userAgent","window","location","href","alert"],"sources":["C:/Users/thc1006/Desktop/dev/NYCU-Med-AI-Agent/frontend/src/services/api.ts"],"sourcesContent":["/**\n * API 服務層 - 與後端 FastAPI 通訊\n */\n\nimport axios, { AxiosResponse } from 'axios';\nimport {\n  TriageRequest,\n  TriageResponse,\n  Hospital,\n  EmergencyInfo,\n  ApiResponse,\n  API_ENDPOINTS\n} from '../types';\n\n// 建立 axios 實例\nconst api = axios.create({\n  baseURL: process.env.NODE_ENV === 'production' ? '/api' : 'http://localhost:8000',\n  timeout: 15000,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Accept-Language': 'zh-TW'\n  }\n});\n\n// 請求攔截器 - 加入請求 ID 和時間戳\napi.interceptors.request.use(\n  (config) => {\n    const requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    config.headers['X-Request-ID'] = requestId;\n    config.headers['X-Client-Timestamp'] = new Date().toISOString();\n\n    console.log(`[API Request] ${config.method?.toUpperCase()} ${config.url}`, {\n      requestId,\n      data: config.data\n    });\n\n    return config;\n  },\n  (error) => {\n    console.error('[API Request Error]', error);\n    return Promise.reject(error);\n  }\n);\n\n// 回應攔截器 - 統一錯誤處理\napi.interceptors.response.use(\n  (response: AxiosResponse) => {\n    console.log(`[API Response] ${response.status}`, {\n      requestId: response.headers['x-request-id'],\n      data: response.data\n    });\n    return response;\n  },\n  (error) => {\n    console.error('[API Response Error]', {\n      status: error.response?.status,\n      message: error.response?.data?.message || error.message,\n      url: error.config?.url\n    });\n\n    // 轉換錯誤訊息為繁體中文\n    const errorMessage = getErrorMessage(error);\n    error.message = errorMessage;\n\n    return Promise.reject(error);\n  }\n);\n\n/**\n * 將錯誤訊息轉換為使用者友善的繁體中文訊息\n */\nfunction getErrorMessage(error: any): string {\n  if (error.response?.data?.message) {\n    return error.response.data.message;\n  }\n\n  switch (error.response?.status) {\n    case 400:\n      return '請求參數有誤，請檢查輸入資料';\n    case 401:\n      return '未授權存取，請重新登入';\n    case 403:\n      return '沒有權限執行此操作';\n    case 404:\n      return '找不到相關資源';\n    case 429:\n      return '請求過於頻繁，請稍後再試';\n    case 500:\n      return '伺服器發生錯誤，請稍後再試';\n    case 502:\n    case 503:\n    case 504:\n      return '服務暫時無法使用，請稍後再試';\n    default:\n      if (error.code === 'NETWORK_ERROR' || error.message.includes('Network Error')) {\n        return '網路連線異常，請檢查網路設定';\n      }\n      if (error.code === 'ECONNABORTED') {\n        return '請求超時，請重試';\n      }\n      return '系統發生未知錯誤，請聯絡技術支援';\n  }\n}\n\n/**\n * 症狀分級評估 API\n */\nexport const triageApi = {\n  /**\n   * 快速症狀評估\n   */\n  async quickTriage(request: TriageRequest): Promise<TriageResponse> {\n    try {\n      const response = await api.post<TriageResponse>(\n        API_ENDPOINTS.TRIAGE_QUICK,\n        request\n      );\n      return response.data;\n    } catch (error) {\n      console.error('[Triage API Error]', error);\n      throw error;\n    }\n  }\n};\n\n/**\n * 醫院搜尋 API\n */\nexport const hospitalApi = {\n  /**\n   * 搜尋附近醫院\n   */\n  async searchNearby(params: {\n    latitude: number;\n    longitude: number;\n    radius?: number;\n    limit?: number;\n    departments?: string[];\n    emergency_only?: boolean;\n  }): Promise<Hospital[]> {\n    try {\n      const response = await api.get<Hospital[]>(API_ENDPOINTS.HOSPITALS_NEARBY, {\n        params: {\n          lat: params.latitude,\n          lng: params.longitude,\n          radius: params.radius || 5000,\n          limit: params.limit || 20,\n          departments: params.departments?.join(','),\n          emergency_only: params.emergency_only || false\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('[Hospital Search API Error]', error);\n      throw error;\n    }\n  },\n\n  /**\n   * 取得緊急醫療資訊\n   */\n  async getEmergencyInfo(): Promise<EmergencyInfo> {\n    try {\n      const response = await api.get<EmergencyInfo>(API_ENDPOINTS.EMERGENCY_INFO);\n      return response.data;\n    } catch (error) {\n      console.error('[Emergency Info API Error]', error);\n      throw error;\n    }\n  }\n};\n\n/**\n * 地理位置服務\n */\nexport const locationApi = {\n  /**\n   * 取得使用者目前位置\n   */\n  async getCurrentLocation(): Promise<{ latitude: number; longitude: number }> {\n    return new Promise((resolve, reject) => {\n      if (!navigator.geolocation) {\n        reject(new Error('此瀏覽器不支援地理定位功能'));\n        return;\n      }\n\n      const options: PositionOptions = {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 60000 // 1分鐘內的快取位置可接受\n      };\n\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          });\n        },\n        (error) => {\n          let message = '無法取得位置資訊';\n\n          switch (error.code) {\n            case error.PERMISSION_DENIED:\n              message = '使用者拒絕了地理定位請求';\n              break;\n            case error.POSITION_UNAVAILABLE:\n              message = '位置資訊不可用';\n              break;\n            case error.TIMEOUT:\n              message = '定位請求超時';\n              break;\n          }\n\n          reject(new Error(message));\n        },\n        options\n      );\n    });\n  },\n\n  /**\n   * 計算兩點間距離（公里）\n   */\n  calculateDistance(\n    lat1: number,\n    lon1: number,\n    lat2: number,\n    lon2: number\n  ): number {\n    const R = 6371; // 地球半徑（公里）\n    const dLat = this.degToRad(lat2 - lat1);\n    const dLon = this.degToRad(lon2 - lon1);\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(this.degToRad(lat1)) * Math.cos(this.degToRad(lat2)) *\n      Math.sin(dLon / 2) * Math.sin(dLon / 2);\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  },\n\n  degToRad(deg: number): number {\n    return deg * (Math.PI / 180);\n  }\n};\n\n/**\n * 緊急撥號服務\n */\nexport const emergencyApi = {\n  /**\n   * 撥打緊急電話\n   * 注意：在網頁環境中，只能開啟撥號程式，無法直接撥號\n   */\n  call(number: string): void {\n    try {\n      // 檢查是否為行動裝置\n      const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      );\n\n      if (isMobile) {\n        // 行動裝置直接撥號\n        window.location.href = `tel:${number}`;\n      } else {\n        // 桌面裝置顯示電話號碼\n        alert(`請撥打：${number}\\n\\n如果您在緊急狀況中，請使用手機撥打此號碼。`);\n      }\n    } catch (error) {\n      console.error('[Emergency Call Error]', error);\n      alert(`緊急電話：${number}\\n請立即使用電話撥打此號碼。`);\n    }\n  }\n};\n\nexport default api;"],"mappings":"AAAA;AACA;AACA,GAEA,MAAO,CAAAA,KAAK,KAAyB,OAAO,CAC5C,OAMEC,aAAa,KACR,UAAU,CAEjB;AACA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAG,MAAM,CAAG,uBAAuB,CACjFC,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAE,kBAAkB,CAC5B,iBAAiB,CAAE,OACrB,CACF,CAAC,CAAC,CAEF;AACAP,GAAG,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,EAAK,KAAAC,cAAA,CACV,KAAM,CAAAC,SAAS,QAAAC,MAAA,CAAUC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAAF,MAAA,CAAIG,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,CAChFT,MAAM,CAACJ,OAAO,CAAC,cAAc,CAAC,CAAGM,SAAS,CAC1CF,MAAM,CAACJ,OAAO,CAAC,oBAAoB,CAAC,CAAG,GAAI,CAAAQ,IAAI,CAAC,CAAC,CAACM,WAAW,CAAC,CAAC,CAE/DC,OAAO,CAACC,GAAG,kBAAAT,MAAA,EAAAF,cAAA,CAAkBD,MAAM,CAACa,MAAM,UAAAZ,cAAA,iBAAbA,cAAA,CAAea,WAAW,CAAC,CAAC,MAAAX,MAAA,CAAIH,MAAM,CAACe,GAAG,EAAI,CACzEb,SAAS,CACTc,IAAI,CAAEhB,MAAM,CAACgB,IACf,CAAC,CAAC,CAEF,MAAO,CAAAhB,MAAM,CACf,CAAC,CACAiB,KAAK,EAAK,CACTN,OAAO,CAACM,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA5B,GAAG,CAACQ,YAAY,CAACuB,QAAQ,CAACrB,GAAG,CAC1BqB,QAAuB,EAAK,CAC3BT,OAAO,CAACC,GAAG,mBAAAT,MAAA,CAAmBiB,QAAQ,CAACC,MAAM,EAAI,CAC/CnB,SAAS,CAAEkB,QAAQ,CAACxB,OAAO,CAAC,cAAc,CAAC,CAC3CoB,IAAI,CAAEI,QAAQ,CAACJ,IACjB,CAAC,CAAC,CACF,MAAO,CAAAI,QAAQ,CACjB,CAAC,CACAH,KAAK,EAAK,KAAAK,eAAA,CAAAC,gBAAA,CAAAC,qBAAA,CAAAC,aAAA,CACTd,OAAO,CAACM,KAAK,CAAC,sBAAsB,CAAE,CACpCI,MAAM,EAAAC,eAAA,CAAEL,KAAK,CAACG,QAAQ,UAAAE,eAAA,iBAAdA,eAAA,CAAgBD,MAAM,CAC9BK,OAAO,CAAE,EAAAH,gBAAA,CAAAN,KAAK,CAACG,QAAQ,UAAAG,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBP,IAAI,UAAAQ,qBAAA,iBAApBA,qBAAA,CAAsBE,OAAO,GAAIT,KAAK,CAACS,OAAO,CACvDX,GAAG,EAAAU,aAAA,CAAER,KAAK,CAACjB,MAAM,UAAAyB,aAAA,iBAAZA,aAAA,CAAcV,GACrB,CAAC,CAAC,CAEF;AACA,KAAM,CAAAY,YAAY,CAAGC,eAAe,CAACX,KAAK,CAAC,CAC3CA,KAAK,CAACS,OAAO,CAAGC,YAAY,CAE5B,MAAO,CAAAT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACA;AACA,GACA,QAAS,CAAAW,eAAeA,CAACX,KAAU,CAAU,KAAAY,gBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAC3C,IAAAF,gBAAA,CAAIZ,KAAK,CAACG,QAAQ,UAAAS,gBAAA,YAAAC,qBAAA,CAAdD,gBAAA,CAAgBb,IAAI,UAAAc,qBAAA,WAApBA,qBAAA,CAAsBJ,OAAO,CAAE,CACjC,MAAO,CAAAT,KAAK,CAACG,QAAQ,CAACJ,IAAI,CAACU,OAAO,CACpC,CAEA,QAAAK,gBAAA,CAAQd,KAAK,CAACG,QAAQ,UAAAW,gBAAA,iBAAdA,gBAAA,CAAgBV,MAAM,EAC5B,IAAK,IAAG,CACN,MAAO,gBAAgB,CACzB,IAAK,IAAG,CACN,MAAO,aAAa,CACtB,IAAK,IAAG,CACN,MAAO,WAAW,CACpB,IAAK,IAAG,CACN,MAAO,SAAS,CAClB,IAAK,IAAG,CACN,MAAO,cAAc,CACvB,IAAK,IAAG,CACN,MAAO,eAAe,CACxB,IAAK,IAAG,CACR,IAAK,IAAG,CACR,IAAK,IAAG,CACN,MAAO,gBAAgB,CACzB,QACE,GAAIJ,KAAK,CAACe,IAAI,GAAK,eAAe,EAAIf,KAAK,CAACS,OAAO,CAACO,QAAQ,CAAC,eAAe,CAAC,CAAE,CAC7E,MAAO,gBAAgB,CACzB,CACA,GAAIhB,KAAK,CAACe,IAAI,GAAK,cAAc,CAAE,CACjC,MAAO,UAAU,CACnB,CACA,MAAO,kBAAkB,CAC7B,CACF,CAEA;AACA;AACA,GACA,MAAO,MAAM,CAAAE,SAAS,CAAG,CACvB;AACF;AACA,KACE,KAAM,CAAAC,WAAWA,CAACrC,OAAsB,CAA2B,CACjE,GAAI,CACF,KAAM,CAAAsB,QAAQ,CAAG,KAAM,CAAA/B,GAAG,CAAC+C,IAAI,CAC7BhD,aAAa,CAACiD,YAAY,CAC1BvC,OACF,CAAC,CACD,MAAO,CAAAsB,QAAQ,CAACJ,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1C,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAqB,WAAW,CAAG,CACzB;AACF;AACA,KACE,KAAM,CAAAC,YAAYA,CAACC,MAOlB,CAAuB,CACtB,GAAI,KAAAC,mBAAA,CACF,KAAM,CAAArB,QAAQ,CAAG,KAAM,CAAA/B,GAAG,CAACqD,GAAG,CAAatD,aAAa,CAACuD,gBAAgB,CAAE,CACzEH,MAAM,CAAE,CACNI,GAAG,CAAEJ,MAAM,CAACK,QAAQ,CACpBC,GAAG,CAAEN,MAAM,CAACO,SAAS,CACrBC,MAAM,CAAER,MAAM,CAACQ,MAAM,EAAI,IAAI,CAC7BC,KAAK,CAAET,MAAM,CAACS,KAAK,EAAI,EAAE,CACzBC,WAAW,EAAAT,mBAAA,CAAED,MAAM,CAACU,WAAW,UAAAT,mBAAA,iBAAlBA,mBAAA,CAAoBU,IAAI,CAAC,GAAG,CAAC,CAC1CC,cAAc,CAAEZ,MAAM,CAACY,cAAc,EAAI,KAC3C,CACF,CAAC,CAAC,CACF,MAAO,CAAAhC,QAAQ,CAACJ,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED;AACF;AACA,KACE,KAAM,CAAAoC,gBAAgBA,CAAA,CAA2B,CAC/C,GAAI,CACF,KAAM,CAAAjC,QAAQ,CAAG,KAAM,CAAA/B,GAAG,CAACqD,GAAG,CAAgBtD,aAAa,CAACkE,cAAc,CAAC,CAC3E,MAAO,CAAAlC,QAAQ,CAACJ,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACb,CACF,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAsC,WAAW,CAAG,CACzB;AACF;AACA,KACE,KAAM,CAAAC,kBAAkBA,CAAA,CAAqD,CAC3E,MAAO,IAAI,CAAAtC,OAAO,CAAC,CAACuC,OAAO,CAAEtC,MAAM,GAAK,CACtC,GAAI,CAACuC,SAAS,CAACC,WAAW,CAAE,CAC1BxC,MAAM,CAAC,GAAI,CAAAyC,KAAK,CAAC,eAAe,CAAC,CAAC,CAClC,OACF,CAEA,KAAM,CAAAC,OAAwB,CAAG,CAC/BC,kBAAkB,CAAE,IAAI,CACxBnE,OAAO,CAAE,KAAK,CACdoE,UAAU,CAAE,KAAM;AACpB,CAAC,CAEDL,SAAS,CAACC,WAAW,CAACK,kBAAkB,CACrCC,QAAQ,EAAK,CACZR,OAAO,CAAC,CACNZ,QAAQ,CAAEoB,QAAQ,CAACC,MAAM,CAACrB,QAAQ,CAClCE,SAAS,CAAEkB,QAAQ,CAACC,MAAM,CAACnB,SAC7B,CAAC,CAAC,CACJ,CAAC,CACA9B,KAAK,EAAK,CACT,GAAI,CAAAS,OAAO,CAAG,UAAU,CAExB,OAAQT,KAAK,CAACe,IAAI,EAChB,IAAK,CAAAf,KAAK,CAACkD,iBAAiB,CAC1BzC,OAAO,CAAG,cAAc,CACxB,MACF,IAAK,CAAAT,KAAK,CAACmD,oBAAoB,CAC7B1C,OAAO,CAAG,SAAS,CACnB,MACF,IAAK,CAAAT,KAAK,CAACoD,OAAO,CAChB3C,OAAO,CAAG,QAAQ,CAClB,MACJ,CAEAP,MAAM,CAAC,GAAI,CAAAyC,KAAK,CAAClC,OAAO,CAAC,CAAC,CAC5B,CAAC,CACDmC,OACF,CAAC,CACH,CAAC,CAAC,CACJ,CAAC,CAED;AACF;AACA,KACES,iBAAiBA,CACfC,IAAY,CACZC,IAAY,CACZC,IAAY,CACZC,IAAY,CACJ,CACR,KAAM,CAAAC,CAAC,CAAG,IAAI,CAAE;AAChB,KAAM,CAAAC,IAAI,CAAG,IAAI,CAACC,QAAQ,CAACJ,IAAI,CAAGF,IAAI,CAAC,CACvC,KAAM,CAAAO,IAAI,CAAG,IAAI,CAACD,QAAQ,CAACH,IAAI,CAAGF,IAAI,CAAC,CAEvC,KAAM,CAAAO,CAAC,CACLzE,IAAI,CAAC0E,GAAG,CAACJ,IAAI,CAAG,CAAC,CAAC,CAAGtE,IAAI,CAAC0E,GAAG,CAACJ,IAAI,CAAG,CAAC,CAAC,CACvCtE,IAAI,CAAC2E,GAAG,CAAC,IAAI,CAACJ,QAAQ,CAACN,IAAI,CAAC,CAAC,CAAGjE,IAAI,CAAC2E,GAAG,CAAC,IAAI,CAACJ,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAC7DnE,IAAI,CAAC0E,GAAG,CAACF,IAAI,CAAG,CAAC,CAAC,CAAGxE,IAAI,CAAC0E,GAAG,CAACF,IAAI,CAAG,CAAC,CAAC,CAEzC,KAAM,CAAAI,CAAC,CAAG,CAAC,CAAG5E,IAAI,CAAC6E,KAAK,CAAC7E,IAAI,CAAC8E,IAAI,CAACL,CAAC,CAAC,CAAEzE,IAAI,CAAC8E,IAAI,CAAC,CAAC,CAAGL,CAAC,CAAC,CAAC,CACxD,MAAO,CAAAJ,CAAC,CAAGO,CAAC,CACd,CAAC,CAEDL,QAAQA,CAACQ,GAAW,CAAU,CAC5B,MAAO,CAAAA,GAAG,EAAI/E,IAAI,CAACgF,EAAE,CAAG,GAAG,CAAC,CAC9B,CACF,CAAC,CAED;AACA;AACA,GACA,MAAO,MAAM,CAAAC,YAAY,CAAG,CAC1B;AACF;AACA;AACA,KACEC,IAAIA,CAACC,MAAc,CAAQ,CACzB,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,gEAAgE,CAACC,IAAI,CACpFjC,SAAS,CAACkC,SACZ,CAAC,CAED,GAAIF,QAAQ,CAAE,CACZ;AACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,QAAA5F,MAAA,CAAUsF,MAAM,CAAE,CACxC,CAAC,IAAM,CACL;AACAO,KAAK,4BAAA7F,MAAA,CAAQsF,MAAM,sIAA2B,CAAC,CACjD,CACF,CAAE,MAAOxE,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,wBAAwB,CAAEA,KAAK,CAAC,CAC9C+E,KAAK,kCAAA7F,MAAA,CAASsF,MAAM,oFAAiB,CAAC,CACxC,CACF,CACF,CAAC,CAED,cAAe,CAAApG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}